// Generated by Dagger (https://dagger.dev).
package com.itx.wvsecurit.ui.view;

import com.itx.wvsecurit.domain.usecase.GetLoginUseCase;
import com.itx.wvsecurit.tool.MyDialog;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoginActivity_MembersInjector implements MembersInjector<LoginActivity> {
  private final Provider<GetLoginUseCase> getLoginUseCaseProvider;

  private final Provider<MyDialog> myDialogProvider;

  public LoginActivity_MembersInjector(Provider<GetLoginUseCase> getLoginUseCaseProvider,
      Provider<MyDialog> myDialogProvider) {
    this.getLoginUseCaseProvider = getLoginUseCaseProvider;
    this.myDialogProvider = myDialogProvider;
  }

  public static MembersInjector<LoginActivity> create(
      Provider<GetLoginUseCase> getLoginUseCaseProvider, Provider<MyDialog> myDialogProvider) {
    return new LoginActivity_MembersInjector(getLoginUseCaseProvider, myDialogProvider);
  }

  @Override
  public void injectMembers(LoginActivity instance) {
    injectGetLoginUseCase(instance, getLoginUseCaseProvider.get());
    injectMyDialog(instance, myDialogProvider.get());
  }

  @InjectedFieldSignature("com.itx.wvsecurit.ui.view.LoginActivity.getLoginUseCase")
  public static void injectGetLoginUseCase(LoginActivity instance,
      GetLoginUseCase getLoginUseCase) {
    instance.getLoginUseCase = getLoginUseCase;
  }

  @InjectedFieldSignature("com.itx.wvsecurit.ui.view.LoginActivity.myDialog")
  public static void injectMyDialog(LoginActivity instance, MyDialog myDialog) {
    instance.myDialog = myDialog;
  }
}
