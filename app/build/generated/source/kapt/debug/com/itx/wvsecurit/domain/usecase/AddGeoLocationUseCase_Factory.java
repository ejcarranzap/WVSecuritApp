// Generated by Dagger (https://dagger.dev).
package com.itx.wvsecurit.domain.usecase;

import com.itx.wvsecurit.data.network.GeoLocationApiClient;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AddGeoLocationUseCase_Factory implements Factory<AddGeoLocationUseCase> {
  private final Provider<GeoLocationApiClient> geoLocationApiClientProvider;

  public AddGeoLocationUseCase_Factory(
      Provider<GeoLocationApiClient> geoLocationApiClientProvider) {
    this.geoLocationApiClientProvider = geoLocationApiClientProvider;
  }

  @Override
  public AddGeoLocationUseCase get() {
    return newInstance(geoLocationApiClientProvider.get());
  }

  public static AddGeoLocationUseCase_Factory create(
      Provider<GeoLocationApiClient> geoLocationApiClientProvider) {
    return new AddGeoLocationUseCase_Factory(geoLocationApiClientProvider);
  }

  public static AddGeoLocationUseCase newInstance(GeoLocationApiClient geoLocationApiClient) {
    return new AddGeoLocationUseCase(geoLocationApiClient);
  }
}
