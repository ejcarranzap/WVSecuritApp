// Generated by Dagger (https://dagger.dev).
package com.itx.wvsecurit.ui.view;

import com.itx.wvsecurit.data.database.GeoAlertTypeRepository;
import com.itx.wvsecurit.data.database.GeoLocationAlertRepository;
import com.itx.wvsecurit.data.database.GeoLocationRepository;
import com.itx.wvsecurit.data.database.SegIncidentRepository;
import com.itx.wvsecurit.data.network.GeoAlertTypeApiClient;
import com.itx.wvsecurit.data.network.GeoLocationAlertApiClient;
import com.itx.wvsecurit.data.network.SendMailService;
import com.itx.wvsecurit.data.preferences.SharedPreferencesRepository;
import com.itx.wvsecurit.domain.usecase.AddGeoLocationUseCase;
import com.itx.wvsecurit.domain.usecase.AddSegIncidentUseCase;
import com.itx.wvsecurit.tool.MyCustomDialogFragment;
import com.itx.wvsecurit.tool.MyDialog;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<SharedPreferencesRepository> sharedPreferencesRepositoryProvider;

  private final Provider<GeoLocationRepository> geoLocationRepositoryProvider;

  private final Provider<AddGeoLocationUseCase> addGeoLocationUseCaseProvider;

  private final Provider<SegIncidentRepository> segIncidentRepositoryProvider;

  private final Provider<AddSegIncidentUseCase> addSegIncidentUseCaseProvider;

  private final Provider<GeoAlertTypeRepository> geoAlertTypeRepositoryProvider;

  private final Provider<GeoAlertTypeApiClient> provideGeoAlertTypeApiClientProvider;

  private final Provider<GeoLocationAlertRepository> geoLocationAlertRepositoryProvider;

  private final Provider<GeoLocationAlertApiClient> provideGeoLocationAlertApiClientProvider;

  private final Provider<MyDialog> myDialogProvider;

  private final Provider<MyCustomDialogFragment> myCustomDialogProvider;

  private final Provider<SendMailService> sendMailServiceProvider;

  public MainActivity_MembersInjector(
      Provider<SharedPreferencesRepository> sharedPreferencesRepositoryProvider,
      Provider<GeoLocationRepository> geoLocationRepositoryProvider,
      Provider<AddGeoLocationUseCase> addGeoLocationUseCaseProvider,
      Provider<SegIncidentRepository> segIncidentRepositoryProvider,
      Provider<AddSegIncidentUseCase> addSegIncidentUseCaseProvider,
      Provider<GeoAlertTypeRepository> geoAlertTypeRepositoryProvider,
      Provider<GeoAlertTypeApiClient> provideGeoAlertTypeApiClientProvider,
      Provider<GeoLocationAlertRepository> geoLocationAlertRepositoryProvider,
      Provider<GeoLocationAlertApiClient> provideGeoLocationAlertApiClientProvider,
      Provider<MyDialog> myDialogProvider, Provider<MyCustomDialogFragment> myCustomDialogProvider,
      Provider<SendMailService> sendMailServiceProvider) {
    this.sharedPreferencesRepositoryProvider = sharedPreferencesRepositoryProvider;
    this.geoLocationRepositoryProvider = geoLocationRepositoryProvider;
    this.addGeoLocationUseCaseProvider = addGeoLocationUseCaseProvider;
    this.segIncidentRepositoryProvider = segIncidentRepositoryProvider;
    this.addSegIncidentUseCaseProvider = addSegIncidentUseCaseProvider;
    this.geoAlertTypeRepositoryProvider = geoAlertTypeRepositoryProvider;
    this.provideGeoAlertTypeApiClientProvider = provideGeoAlertTypeApiClientProvider;
    this.geoLocationAlertRepositoryProvider = geoLocationAlertRepositoryProvider;
    this.provideGeoLocationAlertApiClientProvider = provideGeoLocationAlertApiClientProvider;
    this.myDialogProvider = myDialogProvider;
    this.myCustomDialogProvider = myCustomDialogProvider;
    this.sendMailServiceProvider = sendMailServiceProvider;
  }

  public static MembersInjector<MainActivity> create(
      Provider<SharedPreferencesRepository> sharedPreferencesRepositoryProvider,
      Provider<GeoLocationRepository> geoLocationRepositoryProvider,
      Provider<AddGeoLocationUseCase> addGeoLocationUseCaseProvider,
      Provider<SegIncidentRepository> segIncidentRepositoryProvider,
      Provider<AddSegIncidentUseCase> addSegIncidentUseCaseProvider,
      Provider<GeoAlertTypeRepository> geoAlertTypeRepositoryProvider,
      Provider<GeoAlertTypeApiClient> provideGeoAlertTypeApiClientProvider,
      Provider<GeoLocationAlertRepository> geoLocationAlertRepositoryProvider,
      Provider<GeoLocationAlertApiClient> provideGeoLocationAlertApiClientProvider,
      Provider<MyDialog> myDialogProvider, Provider<MyCustomDialogFragment> myCustomDialogProvider,
      Provider<SendMailService> sendMailServiceProvider) {
    return new MainActivity_MembersInjector(sharedPreferencesRepositoryProvider, geoLocationRepositoryProvider, addGeoLocationUseCaseProvider, segIncidentRepositoryProvider, addSegIncidentUseCaseProvider, geoAlertTypeRepositoryProvider, provideGeoAlertTypeApiClientProvider, geoLocationAlertRepositoryProvider, provideGeoLocationAlertApiClientProvider, myDialogProvider, myCustomDialogProvider, sendMailServiceProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectSharedPreferencesRepository(instance, sharedPreferencesRepositoryProvider.get());
    injectGeoLocationRepository(instance, geoLocationRepositoryProvider.get());
    injectAddGeoLocationUseCase(instance, addGeoLocationUseCaseProvider.get());
    injectSegIncidentRepository(instance, segIncidentRepositoryProvider.get());
    injectAddSegIncidentUseCase(instance, addSegIncidentUseCaseProvider.get());
    injectGeoAlertTypeRepository(instance, geoAlertTypeRepositoryProvider.get());
    injectProvideGeoAlertTypeApiClient(instance, provideGeoAlertTypeApiClientProvider.get());
    injectGeoLocationAlertRepository(instance, geoLocationAlertRepositoryProvider.get());
    injectProvideGeoLocationAlertApiClient(instance, provideGeoLocationAlertApiClientProvider.get());
    injectMyDialog(instance, myDialogProvider.get());
    injectMyCustomDialog(instance, myCustomDialogProvider.get());
    injectSendMailService(instance, sendMailServiceProvider.get());
  }

  @InjectedFieldSignature("com.itx.wvsecurit.ui.view.MainActivity.sharedPreferencesRepository")
  public static void injectSharedPreferencesRepository(MainActivity instance,
      SharedPreferencesRepository sharedPreferencesRepository) {
    instance.sharedPreferencesRepository = sharedPreferencesRepository;
  }

  @InjectedFieldSignature("com.itx.wvsecurit.ui.view.MainActivity.geoLocationRepository")
  public static void injectGeoLocationRepository(MainActivity instance,
      GeoLocationRepository geoLocationRepository) {
    instance.geoLocationRepository = geoLocationRepository;
  }

  @InjectedFieldSignature("com.itx.wvsecurit.ui.view.MainActivity.addGeoLocationUseCase")
  public static void injectAddGeoLocationUseCase(MainActivity instance,
      AddGeoLocationUseCase addGeoLocationUseCase) {
    instance.addGeoLocationUseCase = addGeoLocationUseCase;
  }

  @InjectedFieldSignature("com.itx.wvsecurit.ui.view.MainActivity.segIncidentRepository")
  public static void injectSegIncidentRepository(MainActivity instance,
      SegIncidentRepository segIncidentRepository) {
    instance.segIncidentRepository = segIncidentRepository;
  }

  @InjectedFieldSignature("com.itx.wvsecurit.ui.view.MainActivity.addSegIncidentUseCase")
  public static void injectAddSegIncidentUseCase(MainActivity instance,
      AddSegIncidentUseCase addSegIncidentUseCase) {
    instance.addSegIncidentUseCase = addSegIncidentUseCase;
  }

  @InjectedFieldSignature("com.itx.wvsecurit.ui.view.MainActivity.geoAlertTypeRepository")
  public static void injectGeoAlertTypeRepository(MainActivity instance,
      GeoAlertTypeRepository geoAlertTypeRepository) {
    instance.geoAlertTypeRepository = geoAlertTypeRepository;
  }

  @InjectedFieldSignature("com.itx.wvsecurit.ui.view.MainActivity.provideGeoAlertTypeApiClient")
  public static void injectProvideGeoAlertTypeApiClient(MainActivity instance,
      GeoAlertTypeApiClient provideGeoAlertTypeApiClient) {
    instance.provideGeoAlertTypeApiClient = provideGeoAlertTypeApiClient;
  }

  @InjectedFieldSignature("com.itx.wvsecurit.ui.view.MainActivity.geoLocationAlertRepository")
  public static void injectGeoLocationAlertRepository(MainActivity instance,
      GeoLocationAlertRepository geoLocationAlertRepository) {
    instance.geoLocationAlertRepository = geoLocationAlertRepository;
  }

  @InjectedFieldSignature("com.itx.wvsecurit.ui.view.MainActivity.provideGeoLocationAlertApiClient")
  public static void injectProvideGeoLocationAlertApiClient(MainActivity instance,
      GeoLocationAlertApiClient provideGeoLocationAlertApiClient) {
    instance.provideGeoLocationAlertApiClient = provideGeoLocationAlertApiClient;
  }

  @InjectedFieldSignature("com.itx.wvsecurit.ui.view.MainActivity.myDialog")
  public static void injectMyDialog(MainActivity instance, MyDialog myDialog) {
    instance.myDialog = myDialog;
  }

  @InjectedFieldSignature("com.itx.wvsecurit.ui.view.MainActivity.myCustomDialog")
  public static void injectMyCustomDialog(MainActivity instance,
      MyCustomDialogFragment myCustomDialog) {
    instance.myCustomDialog = myCustomDialog;
  }

  @InjectedFieldSignature("com.itx.wvsecurit.ui.view.MainActivity.sendMailService")
  public static void injectSendMailService(MainActivity instance, SendMailService sendMailService) {
    instance.sendMailService = sendMailService;
  }
}
