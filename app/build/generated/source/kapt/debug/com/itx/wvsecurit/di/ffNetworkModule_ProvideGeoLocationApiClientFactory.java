// Generated by Dagger (https://dagger.dev).
package com.itx.wvsecurit.di;

import com.itx.wvsecurit.data.network.GeoLocationApiClient;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ffNetworkModule_ProvideGeoLocationApiClientFactory implements Factory<GeoLocationApiClient> {
  private final ffNetworkModule module;

  private final Provider<Retrofit> retrofitProvider;

  public ffNetworkModule_ProvideGeoLocationApiClientFactory(ffNetworkModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public GeoLocationApiClient get() {
    return provideGeoLocationApiClient(module, retrofitProvider.get());
  }

  public static ffNetworkModule_ProvideGeoLocationApiClientFactory create(ffNetworkModule module,
      Provider<Retrofit> retrofitProvider) {
    return new ffNetworkModule_ProvideGeoLocationApiClientFactory(module, retrofitProvider);
  }

  public static GeoLocationApiClient provideGeoLocationApiClient(ffNetworkModule instance,
      Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.provideGeoLocationApiClient(retrofit));
  }
}
