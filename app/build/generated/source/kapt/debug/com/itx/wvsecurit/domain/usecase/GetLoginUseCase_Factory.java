// Generated by Dagger (https://dagger.dev).
package com.itx.wvsecurit.domain.usecase;

import com.itx.wvsecurit.data.network.LoginApiClient;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetLoginUseCase_Factory implements Factory<GetLoginUseCase> {
  private final Provider<LoginApiClient> loginApiClientProvider;

  public GetLoginUseCase_Factory(Provider<LoginApiClient> loginApiClientProvider) {
    this.loginApiClientProvider = loginApiClientProvider;
  }

  @Override
  public GetLoginUseCase get() {
    return newInstance(loginApiClientProvider.get());
  }

  public static GetLoginUseCase_Factory create(Provider<LoginApiClient> loginApiClientProvider) {
    return new GetLoginUseCase_Factory(loginApiClientProvider);
  }

  public static GetLoginUseCase newInstance(LoginApiClient loginApiClient) {
    return new GetLoginUseCase(loginApiClient);
  }
}
