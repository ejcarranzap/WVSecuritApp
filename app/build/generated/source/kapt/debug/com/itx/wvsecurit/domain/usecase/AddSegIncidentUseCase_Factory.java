// Generated by Dagger (https://dagger.dev).
package com.itx.wvsecurit.domain.usecase;

import com.itx.wvsecurit.data.network.SegIncidentApiClient;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AddSegIncidentUseCase_Factory implements Factory<AddSegIncidentUseCase> {
  private final Provider<SegIncidentApiClient> segIncidentApiClientProvider;

  public AddSegIncidentUseCase_Factory(
      Provider<SegIncidentApiClient> segIncidentApiClientProvider) {
    this.segIncidentApiClientProvider = segIncidentApiClientProvider;
  }

  @Override
  public AddSegIncidentUseCase get() {
    return newInstance(segIncidentApiClientProvider.get());
  }

  public static AddSegIncidentUseCase_Factory create(
      Provider<SegIncidentApiClient> segIncidentApiClientProvider) {
    return new AddSegIncidentUseCase_Factory(segIncidentApiClientProvider);
  }

  public static AddSegIncidentUseCase newInstance(SegIncidentApiClient segIncidentApiClient) {
    return new AddSegIncidentUseCase(segIncidentApiClient);
  }
}
