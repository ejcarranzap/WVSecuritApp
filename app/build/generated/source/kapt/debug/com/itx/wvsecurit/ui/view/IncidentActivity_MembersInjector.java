// Generated by Dagger (https://dagger.dev).
package com.itx.wvsecurit.ui.view;

import com.itx.wvsecurit.data.database.SegIncidentRepository;
import com.itx.wvsecurit.data.database.SegIncidentTypeRepository;
import com.itx.wvsecurit.data.network.UploadService;
import com.itx.wvsecurit.data.preferences.SharedPreferencesRepository;
import com.itx.wvsecurit.domain.usecase.AddSegIncidentUseCase;
import com.itx.wvsecurit.domain.usecase.GetSegIncidentTypeUseCase;
import com.itx.wvsecurit.tool.MyDialog;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class IncidentActivity_MembersInjector implements MembersInjector<IncidentActivity> {
  private final Provider<SegIncidentTypeRepository> segIncidentTypeRepositoryProvider;

  private final Provider<GetSegIncidentTypeUseCase> segIncidentTypeUseCaseProvider;

  private final Provider<SharedPreferencesRepository> sharedPreferencesRepositoryProvider;

  private final Provider<SegIncidentRepository> segIncidentRepositoryProvider;

  private final Provider<MyDialog> myDialogProvider;

  private final Provider<UploadService> uploadServiceProvider;

  private final Provider<AddSegIncidentUseCase> addIncidentUseCaseProvider;

  public IncidentActivity_MembersInjector(
      Provider<SegIncidentTypeRepository> segIncidentTypeRepositoryProvider,
      Provider<GetSegIncidentTypeUseCase> segIncidentTypeUseCaseProvider,
      Provider<SharedPreferencesRepository> sharedPreferencesRepositoryProvider,
      Provider<SegIncidentRepository> segIncidentRepositoryProvider,
      Provider<MyDialog> myDialogProvider, Provider<UploadService> uploadServiceProvider,
      Provider<AddSegIncidentUseCase> addIncidentUseCaseProvider) {
    this.segIncidentTypeRepositoryProvider = segIncidentTypeRepositoryProvider;
    this.segIncidentTypeUseCaseProvider = segIncidentTypeUseCaseProvider;
    this.sharedPreferencesRepositoryProvider = sharedPreferencesRepositoryProvider;
    this.segIncidentRepositoryProvider = segIncidentRepositoryProvider;
    this.myDialogProvider = myDialogProvider;
    this.uploadServiceProvider = uploadServiceProvider;
    this.addIncidentUseCaseProvider = addIncidentUseCaseProvider;
  }

  public static MembersInjector<IncidentActivity> create(
      Provider<SegIncidentTypeRepository> segIncidentTypeRepositoryProvider,
      Provider<GetSegIncidentTypeUseCase> segIncidentTypeUseCaseProvider,
      Provider<SharedPreferencesRepository> sharedPreferencesRepositoryProvider,
      Provider<SegIncidentRepository> segIncidentRepositoryProvider,
      Provider<MyDialog> myDialogProvider, Provider<UploadService> uploadServiceProvider,
      Provider<AddSegIncidentUseCase> addIncidentUseCaseProvider) {
    return new IncidentActivity_MembersInjector(segIncidentTypeRepositoryProvider, segIncidentTypeUseCaseProvider, sharedPreferencesRepositoryProvider, segIncidentRepositoryProvider, myDialogProvider, uploadServiceProvider, addIncidentUseCaseProvider);
  }

  @Override
  public void injectMembers(IncidentActivity instance) {
    injectSegIncidentTypeRepository(instance, segIncidentTypeRepositoryProvider.get());
    injectSegIncidentTypeUseCase(instance, segIncidentTypeUseCaseProvider.get());
    injectSharedPreferencesRepository(instance, sharedPreferencesRepositoryProvider.get());
    injectSegIncidentRepository(instance, segIncidentRepositoryProvider.get());
    injectMyDialog(instance, myDialogProvider.get());
    injectUploadService(instance, uploadServiceProvider.get());
    injectAddIncidentUseCase(instance, addIncidentUseCaseProvider.get());
  }

  @InjectedFieldSignature("com.itx.wvsecurit.ui.view.IncidentActivity.segIncidentTypeRepository")
  public static void injectSegIncidentTypeRepository(IncidentActivity instance,
      SegIncidentTypeRepository segIncidentTypeRepository) {
    instance.segIncidentTypeRepository = segIncidentTypeRepository;
  }

  @InjectedFieldSignature("com.itx.wvsecurit.ui.view.IncidentActivity.segIncidentTypeUseCase")
  public static void injectSegIncidentTypeUseCase(IncidentActivity instance,
      GetSegIncidentTypeUseCase segIncidentTypeUseCase) {
    instance.segIncidentTypeUseCase = segIncidentTypeUseCase;
  }

  @InjectedFieldSignature("com.itx.wvsecurit.ui.view.IncidentActivity.sharedPreferencesRepository")
  public static void injectSharedPreferencesRepository(IncidentActivity instance,
      SharedPreferencesRepository sharedPreferencesRepository) {
    instance.sharedPreferencesRepository = sharedPreferencesRepository;
  }

  @InjectedFieldSignature("com.itx.wvsecurit.ui.view.IncidentActivity.segIncidentRepository")
  public static void injectSegIncidentRepository(IncidentActivity instance,
      SegIncidentRepository segIncidentRepository) {
    instance.segIncidentRepository = segIncidentRepository;
  }

  @InjectedFieldSignature("com.itx.wvsecurit.ui.view.IncidentActivity.myDialog")
  public static void injectMyDialog(IncidentActivity instance, MyDialog myDialog) {
    instance.myDialog = myDialog;
  }

  @InjectedFieldSignature("com.itx.wvsecurit.ui.view.IncidentActivity.uploadService")
  public static void injectUploadService(IncidentActivity instance, UploadService uploadService) {
    instance.uploadService = uploadService;
  }

  @InjectedFieldSignature("com.itx.wvsecurit.ui.view.IncidentActivity.addIncidentUseCase")
  public static void injectAddIncidentUseCase(IncidentActivity instance,
      AddSegIncidentUseCase addIncidentUseCase) {
    instance.addIncidentUseCase = addIncidentUseCase;
  }
}
